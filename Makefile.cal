#
# Makefile to create Java JNI library.
# On Windows, uses Cygwin b20.1 tools with Mingw runtime. 
# 
# Things you may need to change, or redefine on the command line:
#   CAL_SRC      -- location of CAL source code
#   JDK_ROOT     -- location where you installed JDK
#

CAL_SRC = cal-2.1

ifeq (${OS},Windows_NT)
  JDK_ROOT = $(firstword $(wildcard c:/j2sdk*))
  CC = gcc
#  CFLAGS = -Wall -O3 -mno-cygwin
  CFLAGS = -Wall -g -mno-cygwin
  OBJECT_OUTPUT_OPTION = -o$(space)
  LINK = dllwrap
#  LINKFLAGS = -s -mno-cygwin -mwindows --target=i386-mingw32 \
#              --add-stdcall-alias --driver-name gcc
  LINKFLAGS = -mno-cygwin -mwindows --target=i386-mingw32 \
              --add-stdcall-alias --driver-name gcc
  DLL_OUTPUT_OPTION = -o$(space)
  INCLUDES = -I. -I$(JDK_ROOT)/include \
             -I$(CAL_SRC) \
             -I$(JDK_ROOT)/include/win32
  DLL_NAME = cal.dll
  ifeq (${CC},icl)    # Intel Windows compiler
    CFLAGS = -O3 -QaxW
    OBJECT_OUTPUT_OPTION = -Fo
    LINK = xilink
    LINKFLAGS = /dll /libpath:$(JDK_ROOT)/lib user32.lib gdi32.lib
    DLL_OUTPUT_OPTION = /out:
  endif
  ifeq (${CC},cl)     # Microsoft Visual C++ compiler
    CFLAGS = -O2
    OBJECT_OUTPUT_OPTION = -Fo
    LINK = cl
    LINKFLAGS = -MLd -LDd -Zi /link /libpath:$(JDK_ROOT)/lib user32.lib gdi32.lib
    DLL_OUTPUT_OPTION = -Fe
  endif
else
  JDK_ROOT = $(firstword $(wildcard /usr/java/j2sdk*))
  CFLAGS = -DTEST -O3 -DCLOCK_RESOLUTION=60 -DRLIMIT_DATA_DEFAULT=16777216 -DNDEBUG=1 -DSTDC_HEADERS=1 -DHAVE_SYS_WAIT_H=1 -DHAVE_SYS_FILE_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ERRNO_H=1 -DHAVE_ASSERT_H=1 -DHAVE_SYS_WAIT_H=1 -DHAVE_PWD_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_TIMES_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_SYS_RESOURCE_H=1 -DHAVE_STDARG_H=1 -DHAVE_VARARGS_H=1 -DSIZEOF_VOID_P=4 -DSIZEOF_INT=4 -DHAVE_IEEE_754=1 -DPAGE_SIZE=4096 -DLG_PAGE_SIZE=12 -DRETSIGTYPE=void -DHAVE_STRCOLL=1 -DHAVE_SYSCONF=1 -DHAVE_GETHOSTNAME=1 -DHAVE_STRCSPN=1 -DHAVE_STRERROR=1 -DHAVE_STRSPN=1 -DHAVE_STRSTR=1 -DHAVE_GETENV=1 -DHAVE_STRCHR=1 -DHAVE_GETRLIMIT=1 -DHAVE_GETRUSAGE=1 -DHAVE_VALLOC=1
  OBJECT_OUTPUT_OPTION = -o$(space)
  LINK = $(CC)
  LINKFLAGS = -shared
  DLL_OUTPUT_OPTION = -o$(space)
  INCLUDES = -I. -I$(JDK_ROOT)/include \
             -I$(CAL_SRC) \
             -I$(JDK_ROOT)/include/linux
  DLL_NAME = libcal.so
  ifeq (${CC},icc)    # Intel Linux compiler
    LINKFLAGS = -shared -static-libcxa
  endif
endif

# The java tools:
JAVAC = $(JDK_ROOT)/bin/javac
JAVA = $(JDK_ROOT)/bin/java
JAVAH = $(JDK_ROOT)/bin/javah
JAVADOC = $(JDK_ROOT)/bin/javadoc
JAR = $(JDK_ROOT)/bin/jar

# The java source code
JAVA_SOURCES = org/sf/javabdd/BDD.java \
	org/sf/javabdd/BDDException.java \
	org/sf/javabdd/BDDFactory.java \
	org/sf/javabdd/BDDDomain.java \
	org/sf/javabdd/BDDPairing.java \
	org/sf/javabdd/CALFactory.java
JAVA_CLASSFILES = org/sf/javabdd/*.class
JAVA_PACKAGES = org.sf.javabdd
JNI_CLASSFILE = org/sf/javabdd/CALFactory.class
JNI_CLASSNAMES = org.sf.javabdd.CALFactory \
	org.sf.javabdd.CALFactory\$$CALBDD \
	org.sf.javabdd.CALFactory\$$CALBDDDomain \
	org.sf.javabdd.CALFactory\$$CALBDDPairing
JNI_INCLUDE = cal_jni.h
EXAMPLE_SOURCES = NQueens.java
EXAMPLE_CLASSFILES = $(EXAMPLE_SOURCES:%.java=%.class)
JAR_NAME = javabdd_0.6.jar

DLL_SRCS  = cal_jni.c \
	  $(CAL_SRC)/cal.c $(CAL_SRC)/calApplyReduce.c $(CAL_SRC)/calAssociation.c $(CAL_SRC)/calBddCompose.c $(CAL_SRC)/calBddITE.c \
	  $(CAL_SRC)/calBddManager.c $(CAL_SRC)/calBddOp.c $(CAL_SRC)/calBddSatisfy.c $(CAL_SRC)/calBddSize.c \
	  $(CAL_SRC)/calBddSubstitute.c $(CAL_SRC)/calBddSupport.c $(CAL_SRC)/calBddSwapVars.c $(CAL_SRC)/calBddVarSubstitute.c \
	  $(CAL_SRC)/calBlk.c $(CAL_SRC)/calCacheTableTwo.c $(CAL_SRC)/calDump.c $(CAL_SRC)/calGC.c $(CAL_SRC)/calHashTable.c \
	  $(CAL_SRC)/calHashTableOne.c $(CAL_SRC)/calHashTableThree.c $(CAL_SRC)/calInteract.c $(CAL_SRC)/calMem.c \
	  $(CAL_SRC)/calMemoryManagement.c $(CAL_SRC)/calPipeline.c $(CAL_SRC)/calPrint.c \
	  $(CAL_SRC)/calPrintProfile.c $(CAL_SRC)/calQuant.c $(CAL_SRC)/calReduce.c $(CAL_SRC)/calReorderBF.c \
	  $(CAL_SRC)/calReorderDF.c $(CAL_SRC)/calReorderUtil.c \
	  $(CAL_SRC)/calTerminal.c $(CAL_SRC)/calUtil.c
DLL_OBJS  = $(DLL_SRCS:.c=.o)

all: $(DLL_NAME)

dll: $(DLL_NAME)

$(DLL_NAME): $(DLL_OBJS)
	$(LINK) $(DLL_OUTPUT_OPTION)$@ $(DLL_OBJS) $(LINKFLAGS)

cal_jni.o: cal_jni.c $(JNI_INCLUDE)
	$(CC) $(CFLAGS) $(INCLUDES) -c $(OBJECT_OUTPUT_OPTION)$@ $<

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $(OBJECT_OUTPUT_OPTION)$@ $<

$(JNI_INCLUDE): $(JNI_CLASSFILE)
	$(JAVAH) -jni -o $(JNI_INCLUDE) $(JNI_CLASSNAMES)

$(JNI_CLASSFILE): $(JAVA_SOURCES)
	$(JAVAC) $(JAVA_SOURCES)

$(EXAMPLE_CLASSFILES): $(EXAMPLE_SOURCES)
	$(JAVAC) $(EXAMPLE_SOURCES)

examples: $(EXAMPLE_CLASSFILES)

javadoc: $(JAVA_SOURCES)
	$(JAVADOC) -d javadoc -breakiterator $(JAVA_PACKAGES)

jar: $(JAR_NAME)

$(JAR_NAME): $(JNI_CLASSFILE) $(EXAMPLE_CLASSFILES)
	$(JAR) cvfm $(JAR_NAME) javabddManifest $(JAVA_CLASSFILES) $(EXAMPLE_CLASSFILES)

pdo:
	icl -Qprof_gen $(INCLUDES) $(CFLAGS) $(DLL_OUTPUT_OPTION)cal.dll $(DLL_SRCS) -LD /link /libpath:$(JDK_ROOT)/lib 
	$(JAVA) -Dbdd=cal NQueens 12
	icl -Qprof_use $(INCLUDES) $(CFLAGS) $(DLL_OUTPUT_OPTION)cal.dll $(DLL_SRCS) -LD /link /libpath:$(JDK_ROOT)/lib 
	$(JAVA) -Dbdd=cal NQueens 12

opt_report:
	icl -Qopt_report -Qopt_report_phase all $(INCLUDES) $(CFLAGS) $(DLL_OUTPUT_OPTION)cal.dll $(DLL_SRCS) -LD /link /libpath:$(JDK_ROOT)/lib 

test:	$(DLL_NAME) $(EXAMPLE_CLASSFILES)
	$(JAVA) -Dbdd=cal NQueens 8

clean:
	$(RM) -f $(JAVA_CLASSFILES) $(JNI_INCLUDE) $(DLL_OBJS) $(DLL_NAME) $(EXAMPLE_CLASSFILES) $(JAR_NAME)
	$(RM) -rf javadoc

empty := 
space := $(empty) $(empty)
